Issue : The below error occurs when grpc server is unreachable.
// error response on ui
{
    "gitRepositoryName": "first-project",
    "gitPlatformUserName": "mahendraintelops",
    "projectName": "first-project",
    "message": "unable to generate code : first-project",
    "error": "No connection established"
}
Possible Solution : Need to add some code in node server to let ui know about the unavailability.
--------------------------------------------------------
Issue : When the git repo is missing
git clone failed
/home/mahendra/DevEnv/compage-dev/compage/compage/node_modules/simple-git/src/lib/git-factory.ts:48
      throw new api.GitConstructError(
            ^
GitConstructError: Cannot use simple-git on a directory that does not exist
    at gitInstanceFactory (/home/mahendra/DevEnv/compage-dev/compage/compage/node_modules/simple-git/src/lib/git-factory.ts:48:13)
    at /home/mahendra/DevEnv/compage-dev/compage/compage/src/util/simple-git/existingProject.ts:23:37
    at Generator.next (<anonymous>)
    at /home/mahendra/DevEnv/compage-dev/compage/compage/src/util/simple-git/existingProject.ts:31:71
    at new Promise (<anonymous>)
    at __awaiter (/home/mahendra/DevEnv/compage-dev/compage/compage/src/util/simple-git/existingProject.ts:27:12)
    at pushToExistingProjectOnGithub (/home/mahendra/DevEnv/compage-dev/compage/compage/src/util/simple-git/existingProject.ts:14:131)
    at /home/mahendra/DevEnv/compage-dev/compage/compage/src/routes/codeOperations.ts:137:48
    at Generator.next (<anonymous>)
    at fulfilled (/home/mahendra/DevEnv/compage-dev/compage/compage/src/routes/codeOperations.ts:28:58) {
  task: undefined,
  config: {
    baseDir: '/tmp/first-project_downloaded/first-project',
    binary: 'git',
    maxConcurrentProcesses: 6,
    config: [],
    trimmed: false
  }
}
Solution :  create the github repo when the project is getting created. git clone will never fail.
 We shouldn't really create repo here as it doesn't fit it the usecase

 Issue : when project is not present in the cluster(may happen if the projects are cleared from backend)

Solution :  add check in the backend and return error message telling no project exists for the id/name received in request.
/app/node_modules/@kubernetes/client-node/dist/gen/api/customObjectsApi.js:268
                            reject(new apis_1.HttpError(response, body, response.statusCode));
                                   ^

HttpError: HTTP request failed
    at Request._callback (/app/node_modules/@kubernetes/client-node/dist/gen/api/customObjectsApi.js:268:36)
    at self.callback (/app/node_modules/request/request.js:185:22)
    at Request.emit (node:events:513:28)
    at Request.<anonymous> (/app/node_modules/request/request.js:1154:10)
    at Request.emit (node:events:513:28)
    at IncomingMessage.<anonymous> (/app/node_modules/request/request.js:1076:12)
    at Object.onceWrapper (node:events:627:28)
    at IncomingMessage.emit (node:events:525:35)
    at endReadableNT (node:internal/streams/readable:1359:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  response: <ref *2> IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
